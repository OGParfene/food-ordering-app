{"ast":null,"code":"var _jsxFileName = \"/home/oparfene/Documentos/udemy-course/project03_sec11/src/components/Meals/AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\n\n//class that contains the list of meals available and also renders every meal in a unique list item to be displayed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\"https://react-http-movies-9f7a0-default-rtdb.firebaseio.com/meals.json\");\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          price: responseData[key].price,\n          description: responseData[key].description\n        });\n      }\n      ;\n      setMeals(loadedMeals);\n    };\n    fetchMeals();\n    setIsLoading(false);\n  }, []); //will only run when the component will run for the first time\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 12\n  }, this);\n};\n_s(AvailableMeals, \"Opmz/k+5zTZAoo/mes+3X6ZqQsM=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["React","useEffect","useState","Card","classes","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","fetchMeals","response","fetch","responseData","json","loadedMeals","key","push","id","name","price","description","mealsList","map","meal"],"sources":["/home/oparfene/Documentos/udemy-course/project03_sec11/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\n\n\n//class that contains the list of meals available and also renders every meal in a unique list item to be displayed\nconst AvailableMeals = () => {\n    const [meals, setMeals] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(()=>{\n         const fetchMeals = async () =>{\n            const response = await fetch(\"https://react-http-movies-9f7a0-default-rtdb.firebaseio.com/meals.json\");\n            const responseData = await response.json();\n\n            const loadedMeals = [];\n\n            for (const key in responseData){\n                loadedMeals.push({\n                    id: key,\n                    name: responseData[key].name,\n                    price: responseData[key].price,\n                    description: responseData[key].description\n                });\n            };\n\n            setMeals(loadedMeals);\n        };\n        \n        fetchMeals();\n        setIsLoading(false);\n\n    },[]) //will only run when the component will run for the first time\n\n    const mealsList = meals.map(meal =>\n        <MealItem\n            id={meal.id}\n            key={meal.id}\n            name={meal.name}\n            description={meal.description}\n            price={meal.price} />);\n    return <section className={classes.meals}>\n        <Card>\n            <ul>\n                {mealsList}\n            </ul>\n        </Card>\n    </section>\n}\n\nexport default AvailableMeals;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,QAAQ,MAAM,qBAAqB;;AAG1C;AAAA;AACA,MAAMC,cAAc,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAI;IACT,MAAMU,UAAU,GAAG,YAAW;MAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wEAAwE,CAAC;MACtG,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAE1C,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,GAAG,IAAIH,YAAY,EAAC;QAC3BE,WAAW,CAACE,IAAI,CAAC;UACbC,EAAE,EAAEF,GAAG;UACPG,IAAI,EAAEN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;UAC5BC,KAAK,EAAEP,YAAY,CAACG,GAAG,CAAC,CAACI,KAAK;UAC9BC,WAAW,EAAER,YAAY,CAACG,GAAG,CAAC,CAACK;QACnC,CAAC,CAAC;MACN;MAAC;MAEDd,QAAQ,CAACQ,WAAW,CAAC;IACzB,CAAC;IAEDL,UAAU,EAAE;IACZD,YAAY,CAAC,KAAK,CAAC;EAEvB,CAAC,EAAC,EAAE,CAAC,EAAC;;EAEN,MAAMa,SAAS,GAAGhB,KAAK,CAACiB,GAAG,CAACC,IAAI,iBAC5B,QAAC,QAAQ;IACL,EAAE,EAAEA,IAAI,CAACN,EAAG;IAEZ,IAAI,EAAEM,IAAI,CAACL,IAAK;IAChB,WAAW,EAAEK,IAAI,CAACH,WAAY;IAC9B,KAAK,EAAEG,IAAI,CAACJ;EAAM,GAHbI,IAAI,CAACN,EAAE;IAAA;IAAA;IAAA;EAAA,QAGS,CAAC;EAC9B,oBAAO;IAAS,SAAS,EAAEf,OAAO,CAACG,KAAM;IAAA,uBACrC,QAAC,IAAI;MAAA,uBACD;QAAA,UACKgB;MAAS;QAAA;QAAA;QAAA;MAAA;IACT;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACD;AACd,CAAC;AAAA,GA1CKjB,cAAc;AAAA,KAAdA,cAAc;AA4CpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}