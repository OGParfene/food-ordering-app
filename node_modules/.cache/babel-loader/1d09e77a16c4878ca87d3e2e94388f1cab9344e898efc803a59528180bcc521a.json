{"ast":null,"code":"var _jsxFileName = \"/home/oparfene/Documentos/udemy-course/project03_sec11/src/components/Meals/AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\n\n//class that contains the list of meals available and also renders every meal in a unique list item to be displayed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\"https://react-http-movies-9f7a0-default-rtdb.firebaseio.com/meals\");\n      const responseData = await response.json();\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          price: responseData[key].price,\n          description: responseData[key].description\n        });\n      }\n      ;\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []); //will only run when the component will run for the first time\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n};\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["React","useEffect","useState","Card","classes","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","responseData","json","ok","Error","loadedMeals","key","push","id","name","price","description","catch","error","message","MealsLoading","mealsError","mealsList","map","meal"],"sources":["/home/oparfene/Documentos/udemy-course/project03_sec11/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\n\n\n//class that contains the list of meals available and also renders every meal in a unique list item to be displayed\nconst AvailableMeals = () => {\n    const [meals, setMeals] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [httpError, setHttpError] = useState();\n\n    useEffect(() => {\n        const fetchMeals = async () => {\n            const response = await fetch(\"https://react-http-movies-9f7a0-default-rtdb.firebaseio.com/meals\");\n            const responseData = await response.json();\n\n            if(!response.ok){\n                throw new Error(\"Something went wrong!\")\n            }\n\n            const loadedMeals = [];\n\n            for (const key in responseData) {\n                loadedMeals.push({\n                    id: key,\n                    name: responseData[key].name,\n                    price: responseData[key].price,\n                    description: responseData[key].description\n                });\n            };\n\n            setMeals(loadedMeals);\n            setIsLoading(false);\n        };\n\n        \n        fetchMeals().catch((error)=>{\n            setIsLoading(false);\n            setHttpError(error.message)\n        });\n        \n            \n\n\n    }, []) //will only run when the component will run for the first time\n\n    if (isLoading){\n        return <section className={classes.MealsLoading}>\n            <p>Loading...</p>\n        </section>\n    }\n\n    if(httpError){\n        return <section className={classes.mealsError}>\n            <p>{httpError}</p>\n        </section>\n    }\n\n    const mealsList = meals.map(meal =>\n        <MealItem\n            id={meal.id}\n            key={meal.id}\n            name={meal.name}\n            description={meal.description}\n            price={meal.price}\n        />);\n\n    return <section className={classes.meals}>\n        <Card>\n            <ul>\n                {mealsList}\n            </ul>\n        </Card>\n    </section>\n}\n\nexport default AvailableMeals;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,QAAQ,MAAM,qBAAqB;;AAG1C;AAAA;AACA,MAAMC,cAAc,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,EAAE;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMY,UAAU,GAAG,YAAY;MAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAmE,CAAC;MACjG,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAE1C,IAAG,CAACH,QAAQ,CAACI,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MAEA,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,GAAG,IAAIL,YAAY,EAAE;QAC5BI,WAAW,CAACE,IAAI,CAAC;UACbC,EAAE,EAAEF,GAAG;UACPG,IAAI,EAAER,YAAY,CAACK,GAAG,CAAC,CAACG,IAAI;UAC5BC,KAAK,EAAET,YAAY,CAACK,GAAG,CAAC,CAACI,KAAK;UAC9BC,WAAW,EAAEV,YAAY,CAACK,GAAG,CAAC,CAACK;QACnC,CAAC,CAAC;MACN;MAAC;MAEDlB,QAAQ,CAACY,WAAW,CAAC;MACrBV,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC;IAGDG,UAAU,EAAE,CAACc,KAAK,CAAEC,KAAK,IAAG;MACxBlB,YAAY,CAAC,KAAK,CAAC;MACnBE,YAAY,CAACgB,KAAK,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC;EAKN,CAAC,EAAE,EAAE,CAAC,EAAC;;EAEP,IAAIpB,SAAS,EAAC;IACV,oBAAO;MAAS,SAAS,EAAEL,OAAO,CAAC0B,YAAa;MAAA,uBAC5C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAiB;MAAA;MAAA;MAAA;IAAA,QACX;EACd;EAEA,IAAGnB,SAAS,EAAC;IACT,oBAAO;MAAS,SAAS,EAAEP,OAAO,CAAC2B,UAAW;MAAA,uBAC1C;QAAA,UAAIpB;MAAS;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACZ;EACd;EAEA,MAAMqB,SAAS,GAAGzB,KAAK,CAAC0B,GAAG,CAACC,IAAI,iBAC5B,QAAC,QAAQ;IACL,EAAE,EAAEA,IAAI,CAACX,EAAG;IAEZ,IAAI,EAAEW,IAAI,CAACV,IAAK;IAChB,WAAW,EAAEU,IAAI,CAACR,WAAY;IAC9B,KAAK,EAAEQ,IAAI,CAACT;EAAM,GAHbS,IAAI,CAACX,EAAE;IAAA;IAAA;IAAA;EAAA,QAId,CAAC;EAEP,oBAAO;IAAS,SAAS,EAAEnB,OAAO,CAACG,KAAM;IAAA,uBACrC,QAAC,IAAI;MAAA,uBACD;QAAA,UACKyB;MAAS;QAAA;QAAA;QAAA;MAAA;IACT;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACD;AACd,CAAC;AAAA,GApEK1B,cAAc;AAAA,KAAdA,cAAc;AAsEpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}